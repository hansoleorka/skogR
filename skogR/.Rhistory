library(roxygen2)
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
library(skogR)
#' @references Braastad, H. 1966. Volume tables for birch. Reports of the Norwegian Forest Research Institute, 21, 265-365.
braastad1967 <- function(d,h,type=TRUE){
# VOLUM MED BARK I DM3.
if(type){
V = -1.25409 + 0.12739 * d * d + 0.03166 * d * d * h + 0.0009752 * d * h * h - 0.01226 * h * h - 0.004214 * d * d * B
}
# VOLUM UNDER BARK I DM3.
if(type == FALSE){
dub <- d
V = -1.48081 + 0.16945 * dub * dub + 0.01834 * dub * dub * h + 0.01018 * dub * h * h - 0.0451 * h * h
}
return(V)
}
#FUNKSJON FOR LAUV (Brastad, 1966)
#VLL2 = -1.86827 + 0.21461*d*d + 0.01283 * d * d * h + 0.0138 * d * h *h - 0.06311 * h * h
braastad1967(1:30,20)
vestjordet1967 <- function(d,h,type=TRUE){
# VOLUM MED BARK I DM3. D <= 10CM ER VGB1, 10CM < D <= 13CM ER VGB2 OG D > 13CM ER VGB3
if(type){
V<-		ifelse (d <= 10, {VGB1 = 0.52 + 0.02403 * d * d * h + 0.01463 * d * h * h - 0.10983 * h * h + 0.15195 * d * h},
ifelse (d > 10 & d <= 13, {VGB2 = -31.57 + 0.0016 * d * h * h + 0.0186 * h * h + 0.63 * d * h - 2.34 * h + 3.2 * d},
ifelse (d > 13, {VGB3 = 10.14 + 0.0124 * d * d * h + 0.03117 * d * h * h - 0.36381 * h * h + 0.28578 * d * h}, NA)))
}
# VOLUM UNDER BARK I DM3. D <= 10CM ER VGU1, 10CM < D <= 13CM ER VGU2 OG D > 13CM ER VGU3.
if(type == FALSE){
dub <- d
V<-
ifelse (dub <= 10, {VGU1 = 0.38 + 0.02524 * dub * dub * h + 0.01269 * dub * h * h - 0.07726 * h * h + 0.11671 * dub * h},
ifelse (dub > 10 & d <= 13, {VGU2 = -27.19 + 0.0073 * dub * h * h - 0.0228 * h * h + 0.5667 * dub * h - 1.98 * h + 2.75 * dub},
ifelse (dub > 13, {VGU3 = 8.66 + 0.01218 * dub * dub * h + 0.02976 * dub * h * h - 0.31373 * h * h + 0.25452 * dub * h},NA)))
}
return(V)
}
vestjordet1967(1:30,20)
vestjordet1967(1:30,20,type=FALSE)
vestjordet1967(1:30,c(20,21),type=FALSE)
vestjordet1967(1:15,c(20,21),type=FALSE)
library(roxygen2)
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
library(roxygen2)
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
sp <- c(1,2,3)
ifelse(sp == 1, 4, ifelse(sp==2,4))
ifelse(sp == 1, 4, ifelse(sp==2,4,NA))
plot(1)
plot(1:10)
plot(1:10,1:10)
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
library(roxygen2)
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
library(roxygen2)
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
library(roxygen2)
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
library(roxygen2)
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
library(skogR)
skogR.News()
skogR.News <- function ()
{
newsfile <- file.path(system.file(package = "skogR"),"NEWS")
file.show(newsfile)
}
skogR.News()
skogR.News()
#
detach("package:skogR")
remove.packages("skogR")
remove.packages("skogR")
library(skogR)
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
load("D:\WorkSpace2\Packages\skogR\data\trees.rda"")
load("D:\\WorkSpace2\\Packages\\skogR\\data\\trees.rda"")
2222
""""
load("D:\\WorkSpace2\\Packages\\skogR\\data\\trees.rda")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
library(roxygen2)
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
library(skogR)
library(skogR)
library(skogR)
load("D:\\WorkSpace2\\Packages\\skogR\\data\\trees.rda")
?volumeTree
ls()
head(retentionTrees)
volumeTree(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10)
?volumeTree
Species <- ifelse(Species == "G",1,ifelse(Species == "F",2,ifelse(Species == "L",3,NA)))
Species <- as.charcter(retentionTrees$Otrsl)
Species <- ifelse(Species == "G",1,ifelse(Species == "F",2,ifelse(Species == "L",3,NA)))
Species <- as.charcter(retentionTrees$Otrsl)
Species <- as.character(retentionTrees$Otrsl)
Species <- ifelse(Species == "G",1,ifelse(Species == "F",2,ifelse(Species == "L",3,NA)))
volumeTree(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10,Species)
skogR.News
skogR.News()
?volumeTreeBirch
?volumeStand
volumeStand(1o,10)
volumeStand(10,10,2)
#' Single Tree volume
#'
#' Compute stem volume of single trees using Norwegian single tree volume functions
#'
#' @param d Diameter in breast height in centimeter
#' @param h Tree height in meter
#' @param sp vektor med treslag; 1=gran, 2=furu, 3=lauv
#' @param aboveBark a logical value indicating if volume above (TRUE) or below bark (FALSE).
#' @return v volum in liters (dm3)
#' @seealso volumeDoubbleBark
#' @details Dette er en hovedfuksjon.
#' @rdname volumeTree
#' @author Hans Ole Ørka \email{hans.ole.orka@@gmail.org}
volumeTree <- function(d,h,sp,aboveBark=TRUE){
vs <-volumeTreeSpruce(d,h,aboveBark=aboveBark)
vp <-volumeTreePine(d,h,aboveBark=aboveBark)
vb <-volumeTreeBirch(d,h,aboveBark=aboveBark)
v <- ifelse(sp == 1,vs,ifelse(sp == 2,vp,ifelse(sp == 3,vb,NA)))
return(v)
}
#' @rdname volumeTree
#' @references Braastad, H. 1966. Volume tables for birch. Reports of the Norwegian Forest Research Institute, 21, 265-365.
volumeTreeBirch <- function(d,h,aboveBark=TRUE){
B <- volumeDoubbleBark(d,h,sp=3)
# VOLUM MED BARK I DM3.
if(aboveBark){
V = -1.25409 + 0.12739 * d * d + 0.03166 * d * d * h + 0.0009752 * d * h * h - 0.01226 * h * h - 0.004214 * d * d * B
}
# VOLUM UNDER BARK I DM3.
if(aboveBark == FALSE){
dub <- d
V = -1.48081 + 0.16945 * dub * dub + 0.01834 * dub * dub * h + 0.01018 * dub * h * h - 0.0451 * h * h
}
return(V)
}
#FUNKSJON FOR LAUV (Brastad, 1966)
#VLL2 = -1.86827 + 0.21461*d*d + 0.01283 * d * d * h + 0.0138 * d * h *h - 0.06311 * h * h
#' @rdname volumeTree
#' @references Brantseg, A. 1967. Volume functions and tables for Scots pine. South Norway. Reports of the Norwegian Forest Research Institute, 12, 689-739.
volumeTreePine <- function(d,h,aboveBark=TRUE){
# VOLUM MED BARK I DM3. D <= 12CM ER VFB1 OG D > 12CM ER VFB2.
if(aboveBark){
v<- ifelse (d <= 12, {VFB1 = 2.912 + 0.039994 * d * d * h - 0.001091 * d * h * h},
ifelse (d > 12, {VFB2 = 8.6524 + 0.076844 * d * d + 0.031573 * d * d * h},NA))
}
# VOLUM UNDER BARK I DM3. D <= 12CM ER VFU1 OG D > 12CM ER VFU2.
if(aboveBark == FALSE){
du <- d
V<-	ifelse (du <= 12, {VFU1 = 2.2922 + 0.040072 * du * du * h + 0.00216 * du * h * h},
ifelse (du > 12, {VFU2 = -3.5425 + 0.128182 * du * du + 0.028268 * du * du * h + 0.008216 * du * h * h},NA))
}
return(V)
}
#' @rdname volumeTree
#' @references Vestjordet, E. 1967. Functions and tables for volume of standing trees. Norway spruce. Reports of the Norwegian Forest Research Institute, 22, 539-574.
volumeTreeSpruce <- function(d,h,aboveBark=TRUE){
# VOLUM MED BARK I DM3. D <= 10CM ER VGB1, 10CM < D <= 13CM ER VGB2 OG D > 13CM ER VGB3
if(aboveBark){
V<-		ifelse (d <= 10, {VGB1 = 0.52 + 0.02403 * d * d * h + 0.01463 * d * h * h - 0.10983 * h * h + 0.15195 * d * h},
ifelse (d > 10 & d <= 13, {VGB2 = -31.57 + 0.0016 * d * h * h + 0.0186 * h * h + 0.63 * d * h - 2.34 * h + 3.2 * d},
ifelse (d > 13, {VGB3 = 10.14 + 0.0124 * d * d * h + 0.03117 * d * h * h - 0.36381 * h * h + 0.28578 * d * h}, NA)))
}
# VOLUM UNDER BARK I DM3. D <= 10CM ER VGU1, 10CM < D <= 13CM ER VGU2 OG D > 13CM ER VGU3.
if(aboveBark == FALSE){
dub <- d
V<-
ifelse (dub <= 10, {VGU1 = 0.38 + 0.02524 * dub * dub * h + 0.01269 * dub * h * h - 0.07726 * h * h + 0.11671 * dub * h},
ifelse (dub > 10 & d <= 13, {VGU2 = -27.19 + 0.0073 * dub * h * h - 0.0228 * h * h + 0.5667 * dub * h - 1.98 * h + 2.75 * dub},
ifelse (dub > 13, {VGU3 = 8.66 + 0.01218 * dub * dub * h + 0.02976 * dub * h * h - 0.31373 * h * h + 0.25452 * dub * h},NA)))
}
return(V)
}
#' Helpfunctions for volume: Doublebarkthickness
#'
#' Functions for calculation of doublebark in milimeter
#'
#' @param d Diameter in breast hegiht i centimeter including bark
#' @param h Tree height in meter
#' @param sp species codes (1=spruce, 2=pine, 3=Birch)
#' @param Fitje1995 logical indicating to use the functions by Fitje 1995 rather than Brantseg 1967
#' @details bla bla
#' @return B doublebark i mm
#' @author Hans Ole Ørka \email{hans.ole.orka@@gmail.org}
#' @references Braastad, H. 1966. Volume tables for birch. Reports of the Norwegian Forest Research Institute, 21, 265-365.
#' Brantseg, A. 1967. Volume functions and tables for Scots pine. South Norway. Reports of the Norwegian Forest Research Institute, 12, 689-739.
#' Vestjordet, E. 1967. Functions and tables for volume of standing trees. Norway spruce. Reports of the Norwegian Forest Research Institute, 22, 539-574.
#' Fitje A. 1995.
volumeDoubleBark <- function(d,h,sp,Fitje1995=FALSE){
# DOBBEL BARK I MM. Gran
Bs <- -0.34 + 0.831648 * d - 0.002832 * d * d - 0.010112 * h * h + 0.700203 * d * d / (h * h)
# DOBBEL BARK I MM. Furu #Brantseg(1967)
Bp <- 2.9571 + 1.1499 * d - 0.7304 * d / h
#Dobbelbark  Furu Fitje 1995
if(brantseg1967) {
Bp <- 2.3 + 1.13*d
}
#Dobbelbark Bjørk i mm
Bb <- 1.046 * d
#Dobbelbark i mm
B <- ifelse(sp == 1, Bs, ifelse(sp == 2, Bp, ifelse(sp == 3,Bb,NA)))
return(B)
}
volumeTree(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10,Species)
#' @rdname volumeTree
#' @references Brantseg, A. 1967. Volume functions and tables for Scots pine. South Norway. Reports of the Norwegian Forest Research Institute, 12, 689-739.
volumeTreePine <- function(d,h,aboveBark=TRUE){
# VOLUM MED BARK I DM3. D <= 12CM ER VFB1 OG D > 12CM ER VFB2.
if(aboveBark){
v<- ifelse (d <= 12, {VFB1 <- 2.912 + 0.039994 * d * d * h - 0.001091 * d * h * h},
ifelse (d > 12, {VFB2 <- 8.6524 + 0.076844 * d * d + 0.031573 * d * d * h},NA))
}
# VOLUM UNDER BARK I DM3. D <= 12CM ER VFU1 OG D > 12CM ER VFU2.
if(aboveBark == FALSE){
du <- d
V<-	ifelse (du <= 12, {VFU1 <- 2.2922 + 0.040072 * du * du * h + 0.00216 * du * h * h},
ifelse (du > 12, {VFU2 <- -3.5425 + 0.128182 * du * du + 0.028268 * du * du * h + 0.008216 * du * h * h},NA))
}
return(V)
}
volumeTree(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10,Species)
volumeTreePine(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10,Species)
volumeTreePine(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10)
d <- retentionTrees$Odbh/10
h <- retentionTrees$Ohoyde/10
if(aboveBark)
{}
aboveBark = TRUE
# VOLUM MED BARK I DM3. D <= 12CM ER VFB1 OG D > 12CM ER VFB2.
if(aboveBark){
v<- ifelse (d <= 12, {VFB1 <- 2.912 + 0.039994 * d * d * h - 0.001091 * d * h * h},
ifelse (d > 12, {VFB2 <- 8.6524 + 0.076844 * d * d + 0.031573 * d * d * h},NA))
}
V
library(roxygen2)
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
library(skogR)
volumeTree(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10,Species)
#' @rdname volumeTree
#' @references Brantseg, A. 1967. Volume functions and tables for Scots pine. South Norway. Reports of the Norwegian Forest Research Institute, 12, 689-739.
volumeTreePine <- function(d,h,aboveBark=TRUE){
# VOLUM MED BARK I DM3. D <= 12CM ER VFB1 OG D > 12CM ER VFB2.
if(aboveBark){
v<- ifelse (d <= 12, {VFB1 <- 2.912 + 0.039994 * d * d * h - 0.001091 * d * h * h},
ifelse (d > 12, {VFB2 <- 8.6524 + 0.076844 * d * d + 0.031573 * d * d * h},NA))
}
# VOLUM UNDER BARK I DM3. D <= 12CM ER VFU1 OG D > 12CM ER VFU2.
if(aboveBark == FALSE){
du <- d
v<-	ifelse (du <= 12, {VFU1 <- 2.2922 + 0.040072 * du * du * h + 0.00216 * du * h * h},
ifelse (du > 12, {VFU2 <- -3.5425 + 0.128182 * du * du + 0.028268 * du * du * h + 0.008216 * du * h * h},NA))
}
return(v)
}
volumeTree(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10,Species)
#' Helpfunctions for volume: Doublebarkthickness
#'
#' Functions for calculation of doublebark in milimeter
#'
#' @param d Diameter in breast hegiht i centimeter including bark
#' @param h Tree height in meter
#' @param sp species codes (1=spruce, 2=pine, 3=Birch)
#' @param Fitje1995 logical indicating to use the functions by Fitje 1995 rather than Brantseg 1967
#' @details bla bla
#' @return B doublebark i mm
#' @author Hans Ole Ørka \email{hans.ole.orka@@gmail.org}
#' @references Braastad, H. 1966. Volume tables for birch. Reports of the Norwegian Forest Research Institute, 21, 265-365.
#' Brantseg, A. 1967. Volume functions and tables for Scots pine. South Norway. Reports of the Norwegian Forest Research Institute, 12, 689-739.
#' Vestjordet, E. 1967. Functions and tables for volume of standing trees. Norway spruce. Reports of the Norwegian Forest Research Institute, 22, 539-574.
#' Fitje A. 1995.
volumeDoubleBark <- function(d,h,sp,Fitje1995=FALSE){
# DOBBEL BARK I MM. Gran
Bs <- -0.34 + 0.831648 * d - 0.002832 * d * d - 0.010112 * h * h + 0.700203 * d * d / (h * h)
# DOBBEL BARK I MM. Furu #Brantseg(1967)
Bp <- 2.9571 + 1.1499 * d - 0.7304 * d / h
#Dobbelbark  Furu Fitje 1995
if(brantseg1967) {
Bp <- 2.3 + 1.13*d
}
#Dobbelbark Bjørk i mm
Bb <- 1.046 * d
#Dobbelbark i mm
B <- ifelse(sp == 1, Bs, ifelse(sp == 2, Bp, ifelse(sp == 3,Bb,NA)))
return(B)
}
volumeTree(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10,Species)
#' @rdname volumeTree
#' @references Braastad, H. 1966. Volume tables for birch. Reports of the Norwegian Forest Research Institute, 21, 265-365.
volumeTreeBirch <- function(d,h,aboveBark=TRUE){
B <- volumeDoubleBark(d,h,sp=3)
# VOLUM MED BARK I DM3.
if(aboveBark){
v = -1.25409 + 0.12739 * d * d + 0.03166 * d * d * h + 0.0009752 * d * h * h - 0.01226 * h * h - 0.004214 * d * d * B
}
# VOLUM UNDER BARK I DM3.
if(aboveBark == FALSE){
dub <- d
v = -1.48081 + 0.16945 * dub * dub + 0.01834 * dub * dub * h + 0.01018 * dub * h * h - 0.0451 * h * h
}
return(v)
}
#FUNKSJON FOR LAUV (Brastad, 1966)
#VLL2 = -1.86827 + 0.21461*d*d + 0.01283 * d * d * h + 0.0138 * d * h *h - 0.06311 * h * h
volumeTree(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10,Species)
#' Helpfunctions for volume: Doublebarkthickness
#'
#' Functions for calculation of doublebark in milimeter
#'
#' @param d Diameter in breast hegiht i centimeter including bark
#' @param h Tree height in meter
#' @param sp species codes (1=spruce, 2=pine, 3=Birch)
#' @param Fitje1995 logical indicating to use the functions by Fitje 1995 rather than Brantseg 1967
#' @details bla bla
#' @return B doublebark i mm
#' @author Hans Ole Ørka \email{hans.ole.orka@@gmail.org}
#' @references Braastad, H. 1966. Volume tables for birch. Reports of the Norwegian Forest Research Institute, 21, 265-365.
#' Brantseg, A. 1967. Volume functions and tables for Scots pine. South Norway. Reports of the Norwegian Forest Research Institute, 12, 689-739.
#' Vestjordet, E. 1967. Functions and tables for volume of standing trees. Norway spruce. Reports of the Norwegian Forest Research Institute, 22, 539-574.
#' Fitje A. 1995.
volumeDoubleBark <- function(d,h,sp,Fitje1995=FALSE){
# DOBBEL BARK I MM. Gran
Bs <- -0.34 + 0.831648 * d - 0.002832 * d * d - 0.010112 * h * h + 0.700203 * d * d / (h * h)
# DOBBEL BARK I MM. Furu #Brantseg(1967)
Bp <- 2.9571 + 1.1499 * d - 0.7304 * d / h
#Dobbelbark  Furu Fitje 1995
if(Fitje1995) {
Bp <- 2.3 + 1.13*d
}
#Dobbelbark Bjørk i mm
Bb <- 1.046 * d
#Dobbelbark i mm
B <- ifelse(sp == 1, Bs, ifelse(sp == 2, Bp, ifelse(sp == 3,Bb,NA)))
return(B)
}
volumeTree(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10,Species)
v <- volumeTree(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10,Species)
v <- volumeTree(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10,Species)
plot(v,h)
library(skogR)
v <- volumeTree(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10,Species)
ls()
rm(list=ls())
library(skogR)
#Example
library(skogR)
load("D:\\WorkSpace2\\Packages\\skogR\\data\\trees.rda")
?volumeTree
Species <- as.character(retentionTrees$Otrsl)
sp <- ifelse(Species == "G",1,ifelse(Species == "F",2,ifelse(Species == "L",3,NA)))
d <- retentionTrees$Odbh/10
h <- retentionTrees$Ohoyde/10
v <- volumeTree(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10,Species)
library(skogR)
ls()
v <- volumeTree(retentionTrees$Odbh/10,retentionTrees$Ohoyde/10,Species)
data(trees)
trees
library(skogR)
skogR.News()
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
bhage <- 40
H_G17 =((bhage+5.5)/(4.30606+0.164818*(bhage+5.5)))**2.1;
H_G17
a = (bhage-40);
a
diff = 3+0.040183*a-0.104701*a**2/100+0.679104*a**3/100000+0.184402*a**4/1000000-0.224249*a**5/100000000;
diff
H_spruce
si <- seq(8,26,3)
H_G17 + (si-17) * diff/3
H_G17 =((bhage+5.5)/(4.30606+0.164818*(bhage+5.5)))**2.1;
a = (bhage-40);
diff = 3+0.040183*a-0.104701*a**2/100+0.679104*a**3/100000+0.184402*a**4/1000000-0.224249*a**5/100000000;
diff/3
a
diff
diff/3
si
bhage <- 60
H_G17 =((bhage+5.5)/(4.30606+0.164818*(bhage+5.5)))**2.1;
a = (bhage-40);
diff = 3+0.040183*a-0.104701*a**2/100+0.679104*a**3/100000+0.184402*a**4/1000000-0.224249*a**5/100000000;
H_G17
a
diff
diff/3
H_G17
H_G17 + (si-17) * diff/3
#Calculate H40 SPRUCE (SHARMA & BRUNNER 2011)
a0 = 40;
b1=18.9206;
b2=5175.18;
b3=1.1576;
h0 = si - 1.3;
a1 = bhage;
R=0.5*(h0-b1+((h0-b1)**2+4*b2*h0*a0**(-b3))**0.5);
h1=(b1+R)/(1+(b2/R*a1**(-b3)));
H_sp_new= h1 + 1.3;
H_sp_new
# Height from age and SiteIndex
si <- seq(8,26,3)
bhage=20 to 100 by 5;
# Calculate H40 SPRUCE
H_G17 =((bhage+5.5)/(4.30606+0.164818*(bhage+5.5)))**2.1;
a = (bhage-40);
diff = 3+0.040183*a-0.104701*a**2/100+0.679104*a**3/100000+0.184402*a**4/1000000-0.224249*a**5/100000000;
H_spruce = H_G17 + (si-17) * diff/3;
plot(si,H_spruce)
plot(si,H_spruce)
plot(si,H_spruce,asp=1)
plot(si,H_spruce,asp=1,type="l")
H_F14 = 24.7*(1-exp(-0.02105*age))**1.18029+1.3;
a = (age-40)/10;
diff = 3 + 0.394624 * a - 0.0649695 * a**2 + 0.487394 * a**3/100 - 0.141827 * a**4/1000;
si <- 20
H_F14 = 24.7*(1-exp(-0.02105*age))**1.18029+1.3;
a = (age-40)/10;
diff = 3 + 0.394624 * a - 0.0649695 * a**2 + 0.487394 * a**3/100 - 0.141827 * a**4/1000;
H_F14 + (si-14) * diff/3
H_F14 = 24.7*(1-exp(-0.02105*age))**1.18029+1.3;
age <- 40
H_F14 = 24.7*(1-exp(-0.02105*age))**1.18029+1.3;
a = (age-40)/10;
diff = 3 + 0.394624 * a - 0.0649695 * a**2 + 0.487394 * a**3/100 - 0.141827 * a**4/1000;
H_F14 + (si-14) * diff/3
H_spruce <- 20
((H_spruce/(diff/3)) - H_G17) + 17
si
H_spruce
age
diff/3
H_G17
H_G17 =((age+5.5)/(4.30606+0.164818*(age+5.5)))**2.1;
a = (age-40);
diff = 3+0.040183*a-0.104701*a**2/100+0.679104*a**3/100000+0.184402*a**4/1000000-0.224249*a**5/100000000;
H_G17
((H_spruce/(diff/3)) - H_G17) + 17
H_spruce
((H_spruce/(diff/3)) - H_G17) + 17
H_spruce = H_G17 + (si-17) * diff/3;
H_spruce
si
si <- 17
H_G17 =((age+5.5)/(4.30606+0.164818*(age+5.5)))**2.1;
a = (age-40);
diff = 3+0.040183*a-0.104701*a**2/100+0.679104*a**3/100000+0.184402*a**4/1000000-0.224249*a**5/100000000;
H_spruce = H_G17 + (si-17) * diff/3;
H_spruce
((H_spruce/(diff/3)) - H_G17) + 17
# Calculate H40 BIRCH
# Fra Braastad (1977) (gir gjennomsnitshøyde fra overhøyde ved 40 års brysthøydealder (HL40))
a1=2.336;
a2=-0.0552;
a3=-0.0326;
a4=0.00260;
a5=-0.0000574;
a=40*a5;
b=a2+1+a4*40;
c=a1+40*a3-si;
HL40=(-b+(b**2-4*a*(c))**0.5)/(2*a);
HL40
si <- 11
age
H_F14 = 24.7*(1-exp(-0.02105*age))**1.18029+1.3;
a = (age-40)/10;
diff = 3 + 0.394624 * a - 0.0649695 * a**2 + 0.487394 * a**3/100 - 0.141827 * a**4/1000;
H_pine = H_F14 + (si-14) * diff/3;
H_pine
HL <- 10.99976
((HL/(diff/3)) - H_F14) + 14
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
library(roxygen2)
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
roxygenize(package.dir="D:\\WorkSpace2\\Packages\\skogR\\")
